/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package equasions;

import Algebra.BracketTree;
import Algebra.BracketTreeNode;
import Algebra.DenominatorTask;
import Algebra.EquasionSystem;
import Algebra.FullSquareTask;
import Algebra.LongDivisionTask;
import Algebra.MathFunction;
import Algebra.MeasurementUnitsTask;
import Algebra.PowerFunction;
import Algebra.NegativeBracets;
import Util.TeXConverter;
import Algebra.Polynome;
import Algebra.PolynomeGenerator;
import Algebra.RootSimplifyingTask;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
/**
 *
 * @author venikka
 */
public class EqGui extends javax.swing.JFrame {

    /**
     * Creates new form EqGui
     */
    public EqGui() {
        initComponents();        
        generatedPolynome = new Polynome();     
        polynomeRoots = new ArrayList<Integer>();
    }
    public Equasion equasion;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        memberVarPowerTextField = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        generateEquasionButton = new javax.swing.JButton();
        equasionTextField = new javax.swing.JTextField();
        numberOfEquasionsInFileLabel = new javax.swing.JLabel();
        numberOfEquasionsInFileSpinner = new javax.swing.JSpinner();
        generateFileWithGivenAmountButton = new javax.swing.JButton();
        generateImageButton = new javax.swing.JButton();
        numberOfBracketsLabel = new javax.swing.JLabel();
        numberOfBracketsSpinner = new javax.swing.JSpinner();
        bracketsDepthSpinner = new javax.swing.JSpinner();
        bracketsDepthLabel = new javax.swing.JLabel();
        answerRangeLabel = new javax.swing.JLabel();
        answerRangeSpinner = new javax.swing.JSpinner();
        numberOfMembersLabel = new javax.swing.JLabel();
        numberOfMembersSpinner = new javax.swing.JSpinner();
        generateTreeButton1 = new javax.swing.JButton();
        varNameTextField = new javax.swing.JTextField();
        varNameLabel = new javax.swing.JLabel();
        ShowLinearEquasionAnswerCheckBox = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        pdfEquasionSystemsButton = new javax.swing.JButton();
        PDFGenerateDenominatorButton = new javax.swing.JButton();
        numberOfEquasionSystemsTasksInDocumentLabel = new javax.swing.JLabel();
        numberosEquasionSystemTasksInDocumentSpinner = new javax.swing.JSpinner();
        numberOfVariablesInEquasionSystemLabel = new javax.swing.JLabel();
        numberOfVariablesInEquasionSystemSpinner = new javax.swing.JSpinner();
        RootSimplifyingTaskGenerateButton = new javax.swing.JButton();
        numberOfDeniminatorTasksInDocumentLabel = new javax.swing.JLabel();
        numberOfDeniminatorTasksInDocumentSpinner = new javax.swing.JSpinner();
        numberOfFractionsInDeniminatorTasksLabel = new javax.swing.JLabel();
        numberOfFractionsInDeniminatorTasksSpinner = new javax.swing.JSpinner();
        numbersRangeInDeniminatorTasksLabel = new javax.swing.JLabel();
        numbersRangeInDeniminatorTasksSpinner = new javax.swing.JSpinner();
        longDivisionTaskDocumentButton = new javax.swing.JButton();
        NumberOfDigitsInDividedLabel = new javax.swing.JLabel();
        NumberOfDigitsInDividedSpinner = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        memberVariableTextField = new javax.swing.JTextField();
        memberCoeffTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        polynomeStringTextField = new javax.swing.JTextField();
        DecimalFormat df = (DecimalFormat)DecimalFormat.getInstance();
        polynomeMemberVarPowerfTextField = new javax.swing.JFormattedTextField(df);
        clearPolynomeButton = new javax.swing.JButton();
        generateTreeButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        quadraticTrinomialTextField = new javax.swing.JTextField();
        vietaOneEquasionButton = new javax.swing.JButton();
        quadraticTrinomialRootsRangeLabel = new javax.swing.JLabel();
        quadraticTrinomialRootsRangeSpinner = new javax.swing.JSpinner();
        quadraticTrinomialNumberOfTasksLabel = new javax.swing.JLabel();
        quadraticTrinomialNumberOfExersisesSpinner = new javax.swing.JSpinner();
        vietaOneEquasionButton1 = new javax.swing.JButton();
        vietaIncludingNilCheckBox = new javax.swing.JCheckBox();
        FullSquareTaskGenerateButton = new javax.swing.JButton();
        FullSquareTaskPDFButton = new javax.swing.JButton();
        SquareDifferenceCheckBox = new javax.swing.JCheckBox();
        quadraticEquasionGenerateButton = new javax.swing.JButton();
        QuadraticEquasionGeneratePDFButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        NegativeTextField = new javax.swing.JTextField();
        NegativeStringGenegateButton = new javax.swing.JToggleButton();
        negativePdfGenegate = new javax.swing.JButton();
        NegativePdfNumberOfStringsSpinner = new javax.swing.JSpinner();
        NegativePdfNumberOfStringsLabel4 = new javax.swing.JLabel();
        numberOfBracketsInNegativeTaskLabel = new javax.swing.JLabel();
        numberOfBracketsInNegativeTaskSpinner = new javax.swing.JSpinner();
        numberOfMembersInNegativeTaskLabel = new javax.swing.JLabel();
        numberOfMembersInNegativeTaskSpinner = new javax.swing.JSpinner();
        numbersRangeInNegativeTaskLabel = new javax.swing.JLabel();
        numbersRangeInNegativeTaskSpinner = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        measurementUnitsGenerateTaskButton = new javax.swing.JButton();
        measurementUnitsNumberOfTasksLabel = new javax.swing.JLabel();
        measurementUnitsNumberOfTasksSpinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        measurementUnitsTextArea = new javax.swing.JTextArea();
        MeasurementUnitsTaskGenerteDocumetButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        firstFactorTextField = new javax.swing.JTextField();
        secondFactorTextField = new javax.swing.JTextField();
        PolynomeTextField = new javax.swing.JTextField();
        multiplyPolynomesButton = new javax.swing.JButton();
        generateFactorsTextField = new javax.swing.JButton();
        polynomeRootsNumberLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        polynomeRootsjList = new javax.swing.JList();
        polynomeRootsNumberSpinner = new javax.swing.JSpinner();
        RootsListLabel = new javax.swing.JLabel();
        PolynomeRootsRange = new javax.swing.JLabel();
        polynomeRootsRangeSpinner = new javax.swing.JSpinner();
        PolynomeRootsIncludingNill = new javax.swing.JCheckBox();
        GeneratePolynomeByGivenRootsButton = new javax.swing.JButton();
        PolynomeGenerateRandomButton = new javax.swing.JButton();
        dividedPolynomePowerlabel = new javax.swing.JLabel();
        divisorPolynomePowerLabel = new javax.swing.JLabel();
        dividedPolynomePowerSpinner = new javax.swing.JSpinner();
        divisorPolynomePowerSpinner = new javax.swing.JSpinner();
        PolynomeTasksInDocumentNumberLabel = new javax.swing.JLabel();
        PolynomeTasksInDocumentNumberSpinner = new javax.swing.JSpinner();
        PolynomeDivisionTaskDocument = new javax.swing.JButton();
        PolynomeTaskWithRemCheckbox = new javax.swing.JCheckBox();
        PolynomeWithOneKnownRootTaskButton = new javax.swing.JButton();
        GornerTaskButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ShowAnswer = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        generateEquasionButton.setText("Сгенерировать уравнение");
        generateEquasionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateEquasionButtonMouseClicked(evt);
            }
        });

        equasionTextField.setEditable(false);
        equasionTextField.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        equasionTextField.setToolTipText("");

        numberOfEquasionsInFileLabel.setText("Количество уравнений в файле");

        numberOfEquasionsInFileSpinner.setValue(10);

        generateFileWithGivenAmountButton.setText("Сгенерировать файл с заданным количеством уравнений");
        generateFileWithGivenAmountButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateFileWithGivenAmountButtonMouseClicked(evt);
            }
        });

        generateImageButton.setText("Сгенерировать грайический файл с одним уравнением");
        generateImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateImageButtonMouseClicked(evt);
            }
        });

        numberOfBracketsLabel.setText("Количество скобок");

        numberOfBracketsSpinner.setRequestFocusEnabled(false);
        numberOfBracketsSpinner.setValue(1);
        numberOfBracketsSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfBracketsSpinnerStateChanged(evt);
            }
        });

        bracketsDepthSpinner.setRequestFocusEnabled(false);
        bracketsDepthSpinner.setValue(1);
        bracketsDepthSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bracketsDepthSpinnerStateChanged(evt);
            }
        });

        bracketsDepthLabel.setText("Количество вложенных скобок");

        answerRangeLabel.setText("Границы ответа");

        answerRangeSpinner.setValue(10);

        numberOfMembersLabel.setText("Количество слагаемых");

        numberOfMembersSpinner.setRequestFocusEnabled(false);
        numberOfMembersSpinner.setValue(5);
        numberOfMembersSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfMembersSpinnerStateChanged(evt);
            }
        });

        generateTreeButton1.setText("Сгенерировать дерево");
        generateTreeButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateTreeButton1MouseClicked(evt);
            }
        });

        varNameTextField.setText("x");

        varNameLabel.setText("Имя переменной");

        ShowLinearEquasionAnswerCheckBox.setText("Показать ответ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateEquasionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(generateImageButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(generateFileWithGivenAmountButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(numberOfEquasionsInFileLabel))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(varNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numberOfEquasionsInFileSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(varNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ShowLinearEquasionAnswerCheckBox)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(numberOfMembersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(numberOfMembersSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(answerRangeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(answerRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(bracketsDepthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(bracketsDepthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(numberOfBracketsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(48, 48, 48)
                                    .addComponent(numberOfBracketsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(generateTreeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(412, Short.MAX_VALUE))
                    .addComponent(equasionTextField)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generateEquasionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equasionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateFileWithGivenAmountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfEquasionsInFileLabel)
                    .addComponent(numberOfEquasionsInFileSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(varNameTextField)
                    .addComponent(varNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowLinearEquasionAnswerCheckBox)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfBracketsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfBracketsSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bracketsDepthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bracketsDepthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerRangeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfMembersSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfMembersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateTreeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(333, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Сгенерировать уравнение", jPanel1);

        pdfEquasionSystemsButton.setText("Pdf с системами уравнений");
        pdfEquasionSystemsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdfEquasionSystemsButtonMouseClicked(evt);
            }
        });
        pdfEquasionSystemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfEquasionSystemsButtonActionPerformed(evt);
            }
        });

        PDFGenerateDenominatorButton.setText("PDF с заданием на общий знаменатель");
        PDFGenerateDenominatorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PDFGenerateDenominatorButtonMouseClicked(evt);
            }
        });

        numberOfEquasionSystemsTasksInDocumentLabel.setText("Количество заданий в документе");

        numberosEquasionSystemTasksInDocumentSpinner.setValue(10);

        numberOfVariablesInEquasionSystemLabel.setText("Количество неизвестных в системе");

        numberOfVariablesInEquasionSystemSpinner.setValue(3);

        RootSimplifyingTaskGenerateButton.setText("PDF с упрощением корня");
        RootSimplifyingTaskGenerateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RootSimplifyingTaskGenerateButtonMouseClicked(evt);
            }
        });

        numberOfDeniminatorTasksInDocumentLabel.setText("Количество заданий в документе");

        numberosEquasionSystemTasksInDocumentSpinner.setValue(10);
        numberOfDeniminatorTasksInDocumentSpinner.setValue(15);

        numberOfFractionsInDeniminatorTasksLabel.setText("Количество дробей");

        numberosEquasionSystemTasksInDocumentSpinner.setValue(10);
        numberOfFractionsInDeniminatorTasksSpinner.setValue(4);

        numbersRangeInDeniminatorTasksLabel.setText("Разброс чисел");

        numberosEquasionSystemTasksInDocumentSpinner.setValue(10);
        numbersRangeInDeniminatorTasksSpinner.setValue(6);

        longDivisionTaskDocumentButton.setText("PDF с заданиями на деление в столбик");
        longDivisionTaskDocumentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                longDivisionTaskDocumentButtonMouseClicked(evt);
            }
        });

        NumberOfDigitsInDividedLabel.setText("Количество знаков в делимом");

        NumberOfDigitsInDividedSpinner.setValue(3);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 1075, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(PDFGenerateDenominatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfDeniminatorTasksInDocumentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberOfFractionsInDeniminatorTasksLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfDeniminatorTasksInDocumentSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfFractionsInDeniminatorTasksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(numbersRangeInDeniminatorTasksLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NumberOfDigitsInDividedSpinner)
                            .addComponent(numbersRangeInDeniminatorTasksSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))))
                .addGap(450, 450, 450))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(pdfEquasionSystemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numberOfEquasionSystemsTasksInDocumentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfVariablesInEquasionSystemLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numberosEquasionSystemTasksInDocumentSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(numberOfVariablesInEquasionSystemSpinner))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(longDivisionTaskDocumentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RootSimplifyingTaskGenerateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumberOfDigitsInDividedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pdfEquasionSystemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberosEquasionSystemTasksInDocumentSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfEquasionSystemsTasksInDocumentLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfVariablesInEquasionSystemLabel)
                            .addComponent(numberOfVariablesInEquasionSystemSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfDeniminatorTasksInDocumentLabel)
                            .addComponent(numberOfDeniminatorTasksInDocumentSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfFractionsInDeniminatorTasksLabel)
                            .addComponent(numberOfFractionsInDeniminatorTasksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numbersRangeInDeniminatorTasksLabel)
                            .addComponent(numbersRangeInDeniminatorTasksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(PDFGenerateDenominatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(RootSimplifyingTaskGenerateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(longDivisionTaskDocumentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NumberOfDigitsInDividedLabel)
                        .addComponent(NumberOfDigitsInDividedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(507, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Другие задания", jPanel7);

        memberVariableTextField.setText("x");

        jButton1.setText("добавить член");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        polynomeStringTextField.setText("0");

        clearPolynomeButton.setText("Сбросить");
        clearPolynomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearPolynomeButtonMouseClicked(evt);
            }
        });

        generateTreeButton.setText("Сгенерировать дерево");
        generateTreeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateTreeButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(memberVariableTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(memberCoeffTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(polynomeMemberVarPowerfTextField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(87, 87, 87)
                        .addComponent(polynomeStringTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearPolynomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(generateTreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(polynomeStringTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(memberVariableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(polynomeMemberVarPowerfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(memberCoeffTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(clearPolynomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generateTreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(644, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel8);

        vietaOneEquasionButton.setText("Сгенерировать уравнение на теорему Виета");
        vietaOneEquasionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vietaOneEquasionButtonMouseClicked(evt);
            }
        });

        quadraticTrinomialRootsRangeLabel.setText("Разброс корней");

        quadraticTrinomialRootsRangeSpinner.setValue(5);

        quadraticTrinomialNumberOfTasksLabel.setText("Количество заданий в файле");

        quadraticTrinomialNumberOfExersisesSpinner.setValue(10);

        vietaOneEquasionButton1.setText("Сгенерировать PDF c уравнениями на теорему Виета");
        vietaOneEquasionButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vietaGeneratePDFButtonClicked(evt);
            }
        });

        vietaIncludingNilCheckBox.setText("Вклуючая ноль");

        FullSquareTaskGenerateButton.setText("Сгенерировать задание на выделение полного квадрата");
        FullSquareTaskGenerateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FullSquareTaskGenerateButtonMouseClicked(evt);
            }
        });

        FullSquareTaskPDFButton.setText("PDF с полным квадратом");
        FullSquareTaskPDFButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FullSquareTaskPDFButtonMouseClicked(evt);
            }
        });

        SquareDifferenceCheckBox.setText("С разностью квадратов");
        SquareDifferenceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SquareDifferenceCheckBoxActionPerformed(evt);
            }
        });

        quadraticEquasionGenerateButton.setText("Сгенерировать квадратное уравнение");
        quadraticEquasionGenerateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quadraticEquasionGenerateButtonMouseClicked(evt);
            }
        });

        QuadraticEquasionGeneratePDFButton.setText("Сгенерировать PDF с  квадратными уравнениями");
        QuadraticEquasionGeneratePDFButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                QuadraticEquasionGeneratePDFButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(SquareDifferenceCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FullSquareTaskGenerateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(quadraticTrinomialRootsRangeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quadraticTrinomialRootsRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vietaIncludingNilCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(quadraticTrinomialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vietaOneEquasionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                            .addComponent(quadraticEquasionGenerateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                            .addComponent(quadraticTrinomialNumberOfTasksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                            .addComponent(quadraticTrinomialNumberOfExersisesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(vietaOneEquasionButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(QuadraticEquasionGeneratePDFButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(FullSquareTaskPDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quadraticTrinomialRootsRangeLabel)
                    .addComponent(quadraticTrinomialRootsRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quadraticTrinomialNumberOfTasksLabel)
                    .addComponent(quadraticTrinomialNumberOfExersisesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vietaIncludingNilCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quadraticTrinomialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vietaOneEquasionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vietaOneEquasionButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(SquareDifferenceCheckBox))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QuadraticEquasionGeneratePDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadraticEquasionGenerateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FullSquareTaskGenerateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FullSquareTaskPDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(508, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Квадратные трехчлены", jPanel9);

        NegativeStringGenegateButton.setText("Сгенерировать строчку с отрицательными числами");
        NegativeStringGenegateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NegativeStringGenegateButtonMouseClicked(evt);
            }
        });

        negativePdfGenegate.setText("Сгенерировать PDF с отрицательными числами");
        negativePdfGenegate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                negativePdfGenegateMouseClicked(evt);
            }
        });

        NegativePdfNumberOfStringsSpinner.setValue(10);

        NegativePdfNumberOfStringsLabel4.setText("Количество заданий в документе");

        numberOfBracketsInNegativeTaskLabel.setText("Количество скобок");

        numberOfBracketsInNegativeTaskSpinner.setRequestFocusEnabled(false);
        numberOfBracketsInNegativeTaskSpinner.setValue(2);
        numberOfBracketsInNegativeTaskSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfBracketsInNegativeTaskSpinnerStateChanged(evt);
            }
        });

        numberOfMembersInNegativeTaskLabel.setText("Количество слагаемых");

        numberOfMembersInNegativeTaskSpinner.setRequestFocusEnabled(false);
        numberOfMembersInNegativeTaskSpinner.setValue(8);
        numberOfMembersInNegativeTaskSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfMembersInNegativeTaskSpinnerStateChanged(evt);
            }
        });

        numbersRangeInNegativeTaskLabel.setText("Максимальное число");

        numbersRangeInNegativeTaskSpinner.setRequestFocusEnabled(false);
        numbersRangeInNegativeTaskSpinner.setValue(15);
        numbersRangeInNegativeTaskSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numbersRangeInNegativeTaskSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(NegativeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(NegativeStringGenegateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfBracketsInNegativeTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfMembersInNegativeTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numbersRangeInNegativeTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfBracketsInNegativeTaskSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfMembersInNegativeTaskSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numbersRangeInNegativeTaskSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(negativePdfGenegate)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(NegativePdfNumberOfStringsLabel4)
                        .addGap(26, 26, 26)
                        .addComponent(NegativePdfNumberOfStringsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(269, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NegativeStringGenegateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NegativeTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfBracketsInNegativeTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfBracketsInNegativeTaskSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfMembersInNegativeTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfMembersInNegativeTaskSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numbersRangeInNegativeTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numbersRangeInNegativeTaskSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(negativePdfGenegate, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NegativePdfNumberOfStringsLabel4)
                    .addComponent(NegativePdfNumberOfStringsSpinner))
                .addGap(576, 576, 576))
        );

        jTabbedPane1.addTab("Отрицательные числа", jPanel10);

        measurementUnitsGenerateTaskButton.setText("сгенироровать задание");
        measurementUnitsGenerateTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                measurementUnitsGenerateTaskButtonMouseClicked(evt);
            }
        });

        measurementUnitsNumberOfTasksLabel.setText("Количество заданий");

        measurementUnitsNumberOfTasksSpinner.setValue(10);

        measurementUnitsTextArea.setColumns(20);
        measurementUnitsTextArea.setRows(5);
        jScrollPane1.setViewportView(measurementUnitsTextArea);

        MeasurementUnitsTaskGenerteDocumetButton.setText("Документ с заданиями");
        MeasurementUnitsTaskGenerteDocumetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MeasurementUnitsTaskGenerteDocumetButtonMouseClicked(evt);
            }
        });
        MeasurementUnitsTaskGenerteDocumetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeasurementUnitsTaskGenerteDocumetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(measurementUnitsNumberOfTasksLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(measurementUnitsNumberOfTasksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(measurementUnitsGenerateTaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MeasurementUnitsTaskGenerteDocumetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(562, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(measurementUnitsGenerateTaskButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MeasurementUnitsTaskGenerteDocumetButton)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(measurementUnitsNumberOfTasksLabel)
                            .addComponent(measurementUnitsNumberOfTasksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(560, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Единицы измерения", jPanel2);

        secondFactorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondFactorTextFieldActionPerformed(evt);
            }
        });

        PolynomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolynomeTextFieldActionPerformed(evt);
            }
        });

        multiplyPolynomesButton.setText("перемножить");
        multiplyPolynomesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                multiplyPolynomesButtonMouseClicked(evt);
            }
        });

        generateFactorsTextField.setText("Сгенерировать множители");
        generateFactorsTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateFactorsTextFieldMouseClicked(evt);
            }
        });

        polynomeRootsNumberLabel.setText("Количество Корней");

        polynomeRootsjList.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                polynomeRootsjListPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(polynomeRootsjList);

        polynomeRootsNumberSpinner.setValue(5);

        RootsListLabel.setText("Корни");

        PolynomeRootsRange.setText("Разброс Корней");

        polynomeRootsRangeSpinner.setValue(6);

        PolynomeRootsIncludingNill.setText("Включая ноль");

        GeneratePolynomeByGivenRootsButton.setText("Многочлен по корням");
        GeneratePolynomeByGivenRootsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GeneratePolynomeByGivenRootsButtonMouseClicked(evt);
            }
        });

        PolynomeGenerateRandomButton.setText("Случайный Многочлен");
        PolynomeGenerateRandomButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PolynomeGenerateRandomButtonMouseClicked(evt);
            }
        });

        dividedPolynomePowerlabel.setText("Степень делимого");

        divisorPolynomePowerLabel.setText("Степень делителя");

        dividedPolynomePowerSpinner.setValue(3);

        divisorPolynomePowerSpinner.setValue(2);

        PolynomeTasksInDocumentNumberLabel.setText("Количество заданий в документе");

        PolynomeDivisionTaskDocument.setText("Документ с заданиями на деление многочленов");
        PolynomeDivisionTaskDocument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PolynomeDivisionTaskDocumentMouseClicked(evt);
            }
        });

        PolynomeTaskWithRemCheckbox.setText("С остатком");

        PolynomeWithOneKnownRootTaskButton.setText("Документ на нахождение корней, с 1 известным корнем");
        PolynomeWithOneKnownRootTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PolynomeWithOneKnownRootTaskButtonMouseClicked(evt);
            }
        });

        GornerTaskButton.setText("Схема Горнера");
        GornerTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GornerTaskButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PolynomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(firstFactorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(secondFactorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generateFactorsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(341, 341, 341))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dividedPolynomePowerlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(GeneratePolynomeByGivenRootsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(polynomeRootsRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(PolynomeRootsRange, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(PolynomeTaskWithRemCheckbox))
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(polynomeRootsNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(polynomeRootsNumberLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(PolynomeRootsIncludingNill, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PolynomeGenerateRandomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(dividedPolynomePowerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(multiplyPolynomesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RootsListLabel)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(divisorPolynomePowerLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(divisorPolynomePowerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(PolynomeTasksInDocumentNumberLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PolynomeTasksInDocumentNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PolynomeDivisionTaskDocument, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PolynomeWithOneKnownRootTaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GornerTaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(generateFactorsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstFactorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondFactorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(PolynomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(RootsListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(polynomeRootsNumberLabel)
                            .addComponent(polynomeRootsNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PolynomeRootsIncludingNill)
                            .addComponent(PolynomeGenerateRandomButton))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PolynomeRootsRange)
                            .addComponent(polynomeRootsRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PolynomeTaskWithRemCheckbox)))
                    .addComponent(jScrollPane3)
                    .addComponent(GeneratePolynomeByGivenRootsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dividedPolynomePowerlabel)
                            .addComponent(dividedPolynomePowerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(divisorPolynomePowerLabel)
                            .addComponent(divisorPolynomePowerSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(multiplyPolynomesButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PolynomeTasksInDocumentNumberLabel)
                    .addComponent(PolynomeTasksInDocumentNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PolynomeDivisionTaskDocument)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PolynomeWithOneKnownRootTaskButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GornerTaskButton)
                .addGap(352, 352, 352))
        );

        jTabbedPane1.addTab("Перемножение многочленов", jPanel11);

        jMenu1.setText("File");

        ShowAnswer.setText("Показать ответ");
        ShowAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowAnswerMouseClicked(evt);
            }
        });
        ShowAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAnswerActionPerformed(evt);
            }
        });
        jMenu1.add(ShowAnswer);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 805, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShowAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowAnswerMouseClicked
        JOptionPane.showMessageDialog(this, equasion.answer, "Ответ", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ShowAnswerMouseClicked

    private void ShowAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAnswerActionPerformed
        JOptionPane.showMessageDialog(this, equasion.answer, "Ответ", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ShowAnswerActionPerformed

    private void generateTreeButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateTreeButton1MouseClicked
        Random random = new Random();
        BracketTree tree = new BracketTree(new PowerFunction("x", 1),(int)numberOfBracketsSpinner.getValue(), (int)bracketsDepthSpinner.getValue(),
            (int)numberOfMembersSpinner.getValue(), random, (int)answerRangeSpinner.getValue());
        equasionTextField.setText(tree.toString());
    }//GEN-LAST:event_generateTreeButton1MouseClicked

    private void numberOfMembersSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfMembersSpinnerStateChanged
        int newMinNumberOfMembers = (int)numberOfBracketsSpinner.getValue() * ((int)bracketsDepthSpinner.getValue() + 2) + 2;
        if ((int)numberOfMembersSpinner.getValue() < newMinNumberOfMembers){
            numberOfMembersSpinner.setValue(newMinNumberOfMembers);
        }
    }//GEN-LAST:event_numberOfMembersSpinnerStateChanged

    private void bracketsDepthSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bracketsDepthSpinnerStateChanged
        int newMinNumberOfMembers = (int)numberOfBracketsSpinner.getValue() * ((int)bracketsDepthSpinner.getValue() + 1) + 2;
        if ((int)numberOfMembersSpinner.getValue() < newMinNumberOfMembers){
            numberOfMembersSpinner.setValue(newMinNumberOfMembers);
        }
        if ((int)bracketsDepthSpinner.getValue() == 0){
            numberOfBracketsSpinner.setValue(0);
        }
    }//GEN-LAST:event_bracketsDepthSpinnerStateChanged

    private void numberOfBracketsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfBracketsSpinnerStateChanged
        int newMinNumberOfMembers = (int)numberOfBracketsSpinner.getValue() * ((int)bracketsDepthSpinner.getValue() + 1) + 2;
        if ((int)numberOfMembersSpinner.getValue() < newMinNumberOfMembers){
            numberOfMembersSpinner.setValue(newMinNumberOfMembers);
        }
        if ((int)numberOfBracketsSpinner.getValue() == 0){
            bracketsDepthSpinner.setValue(0);
        }
    }//GEN-LAST:event_numberOfBracketsSpinnerStateChanged

    private void generateImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateImageButtonMouseClicked
        if (equasion != null){
            //String path = fileChooser.getCurrentDirectory().getAbsolutePath();
            //TexGenerator.GeneratePng(equasion.eqText);
            String formula = "$" + equasion.eqText + "$";
            try {
                TeXConverter.toSVG(formula, "math.svg", false);
                TeXConverter.SVGTo("math.svg", "Equason.pdf", TeXConverter.PDF);
            } catch (IOException ex) {
                Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_generateImageButtonMouseClicked

    private void generateFileWithGivenAmountButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateFileWithGivenAmountButtonMouseClicked
        String equasions = "";
        Random random = new Random();

        for (int i = 0; i < (int)numberOfEquasionsInFileSpinner.getValue();i++){
            int answer = Util.Rndm.showRandomInteger(-(int)answerRangeSpinner.getValue(), (int)answerRangeSpinner.getValue(), random, true);
            BracketTree tree = new BracketTree(new PowerFunction(varNameTextField.getText(),1),(int)numberOfBracketsSpinner.getValue(), (int)bracketsDepthSpinner.getValue(),
                (int)numberOfMembersSpinner.getValue() - 1, random, (int)answerRangeSpinner.getValue());
            String equasionString;
            ArrayList<BracketTreeNode> equasionSides = BracketTree.CreateEquasion(tree, answer);
            equasionString = BracketTree.EquasionToString(equasionSides);
            if (ShowLinearEquasionAnswerCheckBox.isSelected()){
                equasionString += "\\\\Ответ: " + answer;
            }
            equasions += i + 1 + ") \\mbox{ }" + equasionString + "\\\\";
        }

        String formula = "$$" + equasions + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Решить уравнения}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Линейные Уравнения.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        //TexGenerator.GeneratePng(equasions);
    }//GEN-LAST:event_generateFileWithGivenAmountButtonMouseClicked

    private void generateEquasionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateEquasionButtonMouseClicked
        //equasion = new Equasion(-(int)answerRangeSpinner.getValue(),(int)answerRangeSpinner.getValue(),
            //    (int)numberOfBracketsSpinner.getValue(),(int)bracketsDepthSpinner.getValue(), (int)numberOfMembersSpinner.getValue());
        Random random = new Random();
        int answer = Util.Rndm.showRandomInteger(-(int)answerRangeSpinner.getValue(), (int)answerRangeSpinner.getValue(), random, true);
        BracketTree tree = new BracketTree(new PowerFunction(varNameTextField.getText(),1),(int)numberOfBracketsSpinner.getValue(), (int)bracketsDepthSpinner.getValue(),
            (int)numberOfMembersSpinner.getValue() - 1, random, (int)answerRangeSpinner.getValue());
        String equasionString;
        ArrayList<BracketTreeNode> equasionSides = BracketTree.CreateEquasion(tree, answer);
        equasionString = BracketTree.EquasionToString(equasionSides) + " answer: " + answer;
        equasionTextField.setText(equasionString);
    }//GEN-LAST:event_generateEquasionButtonMouseClicked

    private void negativePdfGenegateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_negativePdfGenegateMouseClicked
        String equasions = "";
        Random random = new Random();        
        for (int i = 0; i < (int)NegativePdfNumberOfStringsSpinner.getValue();i++){
            BracketTree tree = new BracketTree(new PowerFunction(varNameTextField.getText(),0),
            (int)numberOfBracketsInNegativeTaskSpinner.getValue(), 1, (int)numberOfMembersInNegativeTaskSpinner.getValue(), random, 
                    (int)numbersRangeInNegativeTaskSpinner.getValue());
            String equasionString;      
            equasionString = tree.toString();
            equasions += i + 1 + ") \\mbox{ }" + equasionString + "\\\\";
        }

        String formula = "$$" + equasions + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Отрицательные числа}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Отрицательные числа.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_negativePdfGenegateMouseClicked

    private void NegativeStringGenegateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NegativeStringGenegateButtonMouseClicked
        Random random = new Random();        
        BracketTree tree = new BracketTree(new PowerFunction(varNameTextField.getText(),0),
            (int)numberOfBracketsInNegativeTaskSpinner.getValue(), 1, (int)numberOfMembersInNegativeTaskSpinner.getValue(), random, 
                    (int)numbersRangeInNegativeTaskSpinner.getValue());
        String equasionString;      
        equasionString = tree.toString();
        NegativeTextField.setText(equasionString);
        
    }//GEN-LAST:event_NegativeStringGenegateButtonMouseClicked

    private void QuadraticEquasionGeneratePDFButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QuadraticEquasionGeneratePDFButtonMouseClicked
        String equasions = "";
        for (int i = 0; i < (int)quadraticTrinomialNumberOfExersisesSpinner.getValue();i++){
            equasions += i + 1 + ") \\mbox{ }" + VietaEquasion.generateQuadraticEquasion((int)quadraticTrinomialRootsRangeSpinner.getValue(),vietaIncludingNilCheckBox.isSelected()) + "\\\\";
        }

        String formula = "$$" + equasions + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Решить квадратные уравнения}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Квадратные уравнения.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_QuadraticEquasionGeneratePDFButtonMouseClicked

    private void quadraticEquasionGenerateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quadraticEquasionGenerateButtonMouseClicked
        quadraticTrinomialTextField.setText(VietaEquasion.generateQuadraticEquasion((int)quadraticTrinomialRootsRangeSpinner.getValue(), vietaIncludingNilCheckBox.isSelected()));
    }//GEN-LAST:event_quadraticEquasionGenerateButtonMouseClicked

    private void SquareDifferenceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SquareDifferenceCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SquareDifferenceCheckBoxActionPerformed

    private void FullSquareTaskPDFButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FullSquareTaskPDFButtonMouseClicked
        String tasks = "";
        for (int i = 0; i < 10; i++){
            tasks += i + 1 + ") \\mbox{ }" + FullSquareTask.GenerateFullSquareTask(SquareDifferenceCheckBox.isSelected(), (int)quadraticTrinomialRootsRangeSpinner.getValue()) + "\\\\";
        }

        String formula = "$$" + tasks + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Разложить на множители}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Полный квадрат.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_FullSquareTaskPDFButtonMouseClicked

    private void FullSquareTaskGenerateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FullSquareTaskGenerateButtonMouseClicked
        String fullSquareTask = FullSquareTask.GenerateFullSquareTask(SquareDifferenceCheckBox.isSelected(), (int)quadraticTrinomialRootsRangeSpinner.getValue());
        quadraticTrinomialTextField.setText(fullSquareTask);
    }//GEN-LAST:event_FullSquareTaskGenerateButtonMouseClicked

    private void vietaGeneratePDFButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vietaGeneratePDFButtonClicked
        String equasions = "";
        for (int i = 0; i < (int)quadraticTrinomialNumberOfExersisesSpinner.getValue();i++){
            equasions += i + 1 + ") \\mbox{ }" + VietaEquasion.generateVietaEquasion((int)quadraticTrinomialRootsRangeSpinner.getValue(),vietaIncludingNilCheckBox.isSelected()) + "\\\\";
        }

        String formula = "$$" + equasions + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Теорема Виета}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Теорема Виета.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vietaGeneratePDFButtonClicked

    private void vietaOneEquasionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vietaOneEquasionButtonMouseClicked
        quadraticTrinomialTextField.setText(VietaEquasion.generateVietaEquasion((int)quadraticTrinomialRootsRangeSpinner.getValue(), vietaIncludingNilCheckBox.isSelected()));
    }//GEN-LAST:event_vietaOneEquasionButtonMouseClicked

    private void generateTreeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateTreeButtonMouseClicked
        Random random = new Random();
        BracketTree tree = new BracketTree(new PowerFunction("x", 1),(int)numberOfBracketsSpinner.getValue(), (int)bracketsDepthSpinner.getValue(),
            (int)numberOfMembersSpinner.getValue(), random, (int)answerRangeSpinner.getValue());
        String equasionString;
        equasionString = tree.toString();
        polynomeStringTextField.setText(equasionString);
    }//GEN-LAST:event_generateTreeButtonMouseClicked

    private void clearPolynomeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearPolynomeButtonMouseClicked
        generatedPolynome = new Polynome();
        polynomeStringTextField.setText(generatedPolynome.toString());
    }//GEN-LAST:event_clearPolynomeButtonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (polynomeMemberVarPowerfTextField.getText()!= "" && memberCoeffTextField.getText()!= ""&& memberVariableTextField.getText()!= ""){
            try{
                String varName = memberVariableTextField.getText();
                int power = Integer.valueOf(polynomeMemberVarPowerfTextField.getText());
                int coeff = Integer.valueOf(memberCoeffTextField.getText());
                generatedPolynome.addMember(new PowerFunction(varName,1), power, coeff);
                polynomeStringTextField.setText(generatedPolynome.toString());
            }catch (Exception e){

            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void PDFGenerateDenominatorButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PDFGenerateDenominatorButtonMouseClicked
        String fracs = "";
        for (int i = 0; i < (int)numberOfDeniminatorTasksInDocumentSpinner.getValue(); i++){
            fracs += i + 1 + ") \\mbox{ }" + 
                    DenominatorTask.GenerateTask((int)numberOfFractionsInDeniminatorTasksSpinner.getValue(),(int)numbersRangeInDeniminatorTasksSpinner.getValue()) 
                    + "\\\\";
        }

        String formula = "$$" + fracs + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Общий знаменатель}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Общий знаменатель.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PDFGenerateDenominatorButtonMouseClicked

    private void pdfEquasionSystemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfEquasionSystemsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdfEquasionSystemsButtonActionPerformed

    private void pdfEquasionSystemsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdfEquasionSystemsButtonMouseClicked
        String systems = "";
        for (int i = 0; i < (int)numberosEquasionSystemTasksInDocumentSpinner.getValue(); i++){
            //systems += i + 1 + ") \\mbox{ }" + EquasionSystem.GenerateEquasionSystem2vars() + "\\\\";
            systems += i + 1 + ") \\mbox{ }" + EquasionSystem.GenerateEquasionSystem((int)numberOfVariablesInEquasionSystemSpinner.getValue()) + "\\\\";
        }

        String formula = "$$" + systems + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Системы уравнений}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Системы .pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pdfEquasionSystemsButtonMouseClicked

    private void RootSimplifyingTaskGenerateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RootSimplifyingTaskGenerateButtonMouseClicked
        String roots = "";
        for (int i = 0; i < 20; i++){            
            roots += i + 1 + ") \\mbox{ }" + RootSimplifyingTask.GenerateRootSimlifyinrTask() + "\\\\";
        }

        String formula = "$$" + roots + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header = new TeXFormula("\\mbox{\\bf{\\Huge{Упростить выражение}}}");
        header.textStyle = "center";
        formulas.add(header);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Вынести из-под корня.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RootSimplifyingTaskGenerateButtonMouseClicked

    private void numberOfBracketsInNegativeTaskSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfBracketsInNegativeTaskSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfBracketsInNegativeTaskSpinnerStateChanged

    private void numberOfMembersInNegativeTaskSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfMembersInNegativeTaskSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfMembersInNegativeTaskSpinnerStateChanged

    private void numbersRangeInNegativeTaskSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numbersRangeInNegativeTaskSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_numbersRangeInNegativeTaskSpinnerStateChanged

    private void measurementUnitsGenerateTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_measurementUnitsGenerateTaskButtonMouseClicked
        String task = "";
        for (int i = 0; i < (int)measurementUnitsNumberOfTasksSpinner.getValue(); i++){
           task += MeasurementUnitsTask.generateMeasurementUnitsTask() + "\n";
        }
        measurementUnitsTextArea.setText(task);
    }//GEN-LAST:event_measurementUnitsGenerateTaskButtonMouseClicked

    private void PolynomeGenerateRandomButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PolynomeGenerateRandomButtonMouseClicked
        Polynome randPolynome = PolynomeGenerator.randomPolynome("x", (int)polynomeRootsNumberSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(),false);
        PolynomeTextField.setText(randPolynome.toString());
    }//GEN-LAST:event_PolynomeGenerateRandomButtonMouseClicked

    private void GeneratePolynomeByGivenRootsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GeneratePolynomeByGivenRootsButtonMouseClicked
        int rootsNumber = (int)polynomeRootsNumberSpinner.getValue();
        Random rnd = new Random();
        DefaultListModel listModel = new DefaultListModel();
        polynomeRoots.clear();
        for (int i = 0; i < rootsNumber; i++){
            int root = Util.Rndm.showRandomInteger(-(int)polynomeRootsRangeSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(), rnd, PolynomeRootsIncludingNill.isSelected());
            polynomeRoots.add(root);
            listModel.addElement(root);
        }
        polynomeRootsjList.setModel(listModel);
        Polynome polynomeByRoots = PolynomeGenerator.IntegerRoots("x", polynomeRoots);
        PolynomeTextField.setText(polynomeByRoots.toString());
    }//GEN-LAST:event_GeneratePolynomeByGivenRootsButtonMouseClicked

    private void polynomeRootsjListPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_polynomeRootsjListPropertyChange
        
    }//GEN-LAST:event_polynomeRootsjListPropertyChange

    private void generateFactorsTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateFactorsTextFieldMouseClicked
        Random rnd = new Random();
        BracketTree tree1 = new BracketTree(new PowerFunction("x", 1),0, 0, 2, rnd, 0);
        firstFactorTextField.setText(tree1.toString());
        BracketTree tree2 = new BracketTree(new PowerFunction("x", 1), 0, 0, 2, rnd, 0);
        secondFactorTextField.setText(tree2.toString());
        Polynome combination = Polynome.Multiply(tree1.root, tree2.root);
        combination = Polynome.GroupLikeTerms(combination);
        combination = Polynome.SortMembersByPower(combination);
        PolynomeTextField.setText(combination.toString());
    }//GEN-LAST:event_generateFactorsTextFieldMouseClicked

    private void multiplyPolynomesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_multiplyPolynomesButtonMouseClicked
        Polynome firstFactor = PolynomeGenerator.randomPolynome("x", (int)divisorPolynomePowerSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(),false);
        Polynome secondFactor = PolynomeGenerator.randomPolynome("x", (int)dividedPolynomePowerSpinner.getValue() - (int)divisorPolynomePowerSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(),true);
        Polynome combination = Polynome.Multiply(firstFactor, secondFactor);
        combination = Polynome.Canonize(combination);
        firstFactorTextField.setText(firstFactor.toString());
        secondFactorTextField.setText(secondFactor.toString());
        PolynomeTextField.setText(combination.toString());
    }//GEN-LAST:event_multiplyPolynomesButtonMouseClicked

    private void PolynomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolynomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PolynomeTextFieldActionPerformed

    private void secondFactorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondFactorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondFactorTextFieldActionPerformed

    private void PolynomeDivisionTaskDocumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PolynomeDivisionTaskDocumentMouseClicked
        //TODO: make flexible task making option
        Polynome firstFactor;
        Polynome secondFactor;
        Polynome combination;
        Random rnd = new Random();
        String tasks = "";
        for (int i = 0; i < (int)PolynomeTasksInDocumentNumberSpinner.getValue(); i++){
            firstFactor = PolynomeGenerator.randomPolynome("x", (int)divisorPolynomePowerSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(),false);
            secondFactor = PolynomeGenerator.randomPolynome("x", (int)dividedPolynomePowerSpinner.getValue() - (int)divisorPolynomePowerSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(),true);
            combination = Polynome.Multiply(firstFactor, secondFactor);
            int rem = Util.Rndm.showRandomInteger(-(int)polynomeRootsRangeSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(), rnd, true);
            if (PolynomeTaskWithRemCheckbox.isEnabled()){
                combination.addMember(new MathFunction(), 1, rem);
            }
            combination = Polynome.Canonize(combination);            
            tasks += i + 1 + ") \\mbox{ }" + "P(x) = " + combination.toString() + ", Q(x) = " + firstFactor.toString() + "\\\\";
        }
        String formula = "$$" + tasks + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header1 = new TeXFormula("\\mbox{\\bf{\\large{Найти частное $M(x)$ и остаток $R(x)$ от деления многочлена}}}");
        TeXFormula header2 = new TeXFormula("\\mbox{\\bf{\\large{$P(x)$ на многочлен $Q(x)$}}}");
        header1.textStyle = "center";
        header2.textStyle = "center";
        formulas.add(header1);
        formulas.add(header2);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Многочлены.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PolynomeDivisionTaskDocumentMouseClicked

    private void MeasurementUnitsTaskGenerteDocumetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeasurementUnitsTaskGenerteDocumetButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MeasurementUnitsTaskGenerteDocumetButtonActionPerformed

    private void MeasurementUnitsTaskGenerteDocumetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MeasurementUnitsTaskGenerteDocumetButtonMouseClicked
        String tasks = "";
        for (int i = 0; i < (int)measurementUnitsNumberOfTasksSpinner.getValue(); i++){
           tasks += i + 1 + ") " + MeasurementUnitsTask.generateTexMeasurementUnitsTask();           
        }
        String formula = "$$" + tasks + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header1 = new TeXFormula("\\mbox{\\bf{\\Huge{Единицы Измерения}}}");        
        header1.textStyle = "center";
        formulas.add(header1);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Единицы измерения.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_MeasurementUnitsTaskGenerteDocumetButtonMouseClicked

    private void longDivisionTaskDocumentButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_longDivisionTaskDocumentButtonMouseClicked
        String tasks = "";
        for (int i = 0; i < (int)numberosEquasionSystemTasksInDocumentSpinner.getValue(); i++){
           tasks += i + 1 + ") \\mbox{ }" + LongDivisionTask.generateLongDivisionTaskSingleDigitDivisor((int)NumberOfDigitsInDividedSpinner.getValue()) + "\\\\";           
        }
        String formula = "$$" + tasks + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header1 = new TeXFormula("\\mbox{\\bf{\\Huge{Выполнить деление}}}");        
        header1.textStyle = "center";
        formulas.add(header1);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Деление в столбик.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_longDivisionTaskDocumentButtonMouseClicked

    private void PolynomeWithOneKnownRootTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PolynomeWithOneKnownRootTaskButtonMouseClicked
        int rootsNumber = (int)polynomeRootsNumberSpinner.getValue();
        ArrayList<Integer> roots = new ArrayList<Integer>();
        Random rnd = new Random();                        
        Polynome polynomeByRoots;
        String tasks = "";
        for (int i = 0; i < (int)PolynomeTasksInDocumentNumberSpinner.getValue(); i++){
            roots.clear();
            for (int j = 0; j < rootsNumber; j++){
                int root = Util.Rndm.showRandomInteger(-(int)polynomeRootsRangeSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(), rnd, PolynomeRootsIncludingNill.isSelected());
                roots.add(root);            
            }        
            polynomeByRoots = PolynomeGenerator.IntegerRoots("x", roots);
            tasks += i + 1 + ") \\mbox{ }" + "P(x) = " + polynomeByRoots.toString() + ", a = " + roots.get(0) + "\\\\";            
        }
        String formula = "$$" + tasks + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header1 = new TeXFormula("\\mbox{\\bf{\\large{Зная, что число $a$ - корень многочлена $P(x)$,}}}");
        TeXFormula header2 = new TeXFormula("\\mbox{\\bf{\\large{найти его остальные корни}}}");
        header1.textStyle = "center";
        header2.textStyle = "center";
        formulas.add(header1);
        formulas.add(header2);
        formulas.add(new TeXFormula(formula));
        try {
            //TeXConverter.toSVG(formula, "math.svg", false);
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Зная один корень многочлена найти остальные.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PolynomeWithOneKnownRootTaskButtonMouseClicked

    private void GornerTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GornerTaskButtonMouseClicked
        Random rnd = new Random();                        
        Polynome gornerPolynome;        
        Polynome randomPolynome;
        String tasks = "";
        for (int i = 0; i < (int)PolynomeTasksInDocumentNumberSpinner.getValue(); i++){
            int root = Util.Rndm.showRandomInteger(- (int)polynomeRootsRangeSpinner.getValue(), (int)polynomeRootsRangeSpinner.getValue(), rnd, false);
            randomPolynome = PolynomeGenerator.randomPolynome("x", (int)polynomeRootsNumberSpinner.getValue() - 1, (int)polynomeRootsRangeSpinner.getValue(), false);
            gornerPolynome = Polynome.Multiply(PolynomeGenerator.BasicBinome("x", root), randomPolynome);
            gornerPolynome = Polynome.Canonize(gornerPolynome);
            tasks += i + 1 + ") \\mbox{ }" + "P(x) = " + gornerPolynome.toString() + ", Q(x) = " + PolynomeGenerator.BasicBinome("x", root).toString() + "\\\\";
        }
        String formula = "$$" + tasks + "$$";
        ArrayList<TeXFormula> formulas = new ArrayList<>();
        TeXFormula header1 = new TeXFormula("\\mbox{\\bf{\\Large{Разделить многочлен $P(x)$ на многочлем $Q(x)$}}}");        
        TeXFormula header2 = new TeXFormula("\\mbox{\\bf{\\Large{Выписать получившийся многочлен}}}");        
        header1.textStyle = "center";        
        header2.textStyle = "center";        
        formulas.add(header1);        
        formulas.add(header2);        
        formulas.add(new TeXFormula(formula));
        try {            
            TeXConverter.toSVGComplexFormula(formulas, "math.svg", false);
            TeXConverter.SVGTo("math.svg", "Схема Горнера.pdf", TeXConverter.PDF);
        } catch (IOException ex) {
            Logger.getLogger(EqGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GornerTaskButtonMouseClicked
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EqGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EqGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EqGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EqGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EqGui().setVisible(true);
            }
        });
    }
    private ArrayList<Integer> polynomeRoots;
    private Polynome generatedPolynome;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FullSquareTaskGenerateButton;
    private javax.swing.JButton FullSquareTaskPDFButton;
    private javax.swing.JButton GeneratePolynomeByGivenRootsButton;
    private javax.swing.JButton GornerTaskButton;
    private javax.swing.JButton MeasurementUnitsTaskGenerteDocumetButton;
    private javax.swing.JLabel NegativePdfNumberOfStringsLabel4;
    private javax.swing.JSpinner NegativePdfNumberOfStringsSpinner;
    private javax.swing.JToggleButton NegativeStringGenegateButton;
    private javax.swing.JTextField NegativeTextField;
    private javax.swing.JLabel NumberOfDigitsInDividedLabel;
    private javax.swing.JSpinner NumberOfDigitsInDividedSpinner;
    private javax.swing.JButton PDFGenerateDenominatorButton;
    private javax.swing.JButton PolynomeDivisionTaskDocument;
    private javax.swing.JButton PolynomeGenerateRandomButton;
    private javax.swing.JCheckBox PolynomeRootsIncludingNill;
    private javax.swing.JLabel PolynomeRootsRange;
    private javax.swing.JCheckBox PolynomeTaskWithRemCheckbox;
    private javax.swing.JLabel PolynomeTasksInDocumentNumberLabel;
    private javax.swing.JSpinner PolynomeTasksInDocumentNumberSpinner;
    private javax.swing.JTextField PolynomeTextField;
    private javax.swing.JButton PolynomeWithOneKnownRootTaskButton;
    private javax.swing.JButton QuadraticEquasionGeneratePDFButton;
    private javax.swing.JButton RootSimplifyingTaskGenerateButton;
    private javax.swing.JLabel RootsListLabel;
    private javax.swing.JMenuItem ShowAnswer;
    private javax.swing.JCheckBox ShowLinearEquasionAnswerCheckBox;
    private javax.swing.JCheckBox SquareDifferenceCheckBox;
    private javax.swing.JLabel answerRangeLabel;
    private javax.swing.JSpinner answerRangeSpinner;
    private javax.swing.JLabel bracketsDepthLabel;
    private javax.swing.JSpinner bracketsDepthSpinner;
    private javax.swing.JButton clearPolynomeButton;
    private javax.swing.JSpinner dividedPolynomePowerSpinner;
    private javax.swing.JLabel dividedPolynomePowerlabel;
    private javax.swing.JLabel divisorPolynomePowerLabel;
    private javax.swing.JSpinner divisorPolynomePowerSpinner;
    private javax.swing.JTextField equasionTextField;
    private javax.swing.JTextField firstFactorTextField;
    private javax.swing.JButton generateEquasionButton;
    private javax.swing.JButton generateFactorsTextField;
    private javax.swing.JButton generateFileWithGivenAmountButton;
    private javax.swing.JButton generateImageButton;
    private javax.swing.JButton generateTreeButton;
    private javax.swing.JButton generateTreeButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton longDivisionTaskDocumentButton;
    private javax.swing.JButton measurementUnitsGenerateTaskButton;
    private javax.swing.JLabel measurementUnitsNumberOfTasksLabel;
    private javax.swing.JSpinner measurementUnitsNumberOfTasksSpinner;
    private javax.swing.JTextArea measurementUnitsTextArea;
    private javax.swing.JTextField memberCoeffTextField;
    private javax.swing.JTextField memberVarPowerTextField;
    private javax.swing.JTextField memberVariableTextField;
    private javax.swing.JButton multiplyPolynomesButton;
    private javax.swing.JButton negativePdfGenegate;
    private javax.swing.JLabel numberOfBracketsInNegativeTaskLabel;
    private javax.swing.JSpinner numberOfBracketsInNegativeTaskSpinner;
    private javax.swing.JLabel numberOfBracketsLabel;
    private javax.swing.JSpinner numberOfBracketsSpinner;
    private javax.swing.JLabel numberOfDeniminatorTasksInDocumentLabel;
    private javax.swing.JSpinner numberOfDeniminatorTasksInDocumentSpinner;
    private javax.swing.JLabel numberOfEquasionSystemsTasksInDocumentLabel;
    private javax.swing.JLabel numberOfEquasionsInFileLabel;
    private javax.swing.JSpinner numberOfEquasionsInFileSpinner;
    private javax.swing.JLabel numberOfFractionsInDeniminatorTasksLabel;
    private javax.swing.JSpinner numberOfFractionsInDeniminatorTasksSpinner;
    private javax.swing.JLabel numberOfMembersInNegativeTaskLabel;
    private javax.swing.JSpinner numberOfMembersInNegativeTaskSpinner;
    private javax.swing.JLabel numberOfMembersLabel;
    private javax.swing.JSpinner numberOfMembersSpinner;
    private javax.swing.JLabel numberOfVariablesInEquasionSystemLabel;
    private javax.swing.JSpinner numberOfVariablesInEquasionSystemSpinner;
    private javax.swing.JSpinner numberosEquasionSystemTasksInDocumentSpinner;
    private javax.swing.JLabel numbersRangeInDeniminatorTasksLabel;
    private javax.swing.JSpinner numbersRangeInDeniminatorTasksSpinner;
    private javax.swing.JLabel numbersRangeInNegativeTaskLabel;
    private javax.swing.JSpinner numbersRangeInNegativeTaskSpinner;
    private javax.swing.JButton pdfEquasionSystemsButton;
    private javax.swing.JFormattedTextField polynomeMemberVarPowerfTextField;
    private javax.swing.JLabel polynomeRootsNumberLabel;
    private javax.swing.JSpinner polynomeRootsNumberSpinner;
    private javax.swing.JSpinner polynomeRootsRangeSpinner;
    private javax.swing.JList polynomeRootsjList;
    private javax.swing.JTextField polynomeStringTextField;
    private javax.swing.JButton quadraticEquasionGenerateButton;
    private javax.swing.JSpinner quadraticTrinomialNumberOfExersisesSpinner;
    private javax.swing.JLabel quadraticTrinomialNumberOfTasksLabel;
    private javax.swing.JLabel quadraticTrinomialRootsRangeLabel;
    private javax.swing.JSpinner quadraticTrinomialRootsRangeSpinner;
    private javax.swing.JTextField quadraticTrinomialTextField;
    private javax.swing.JTextField secondFactorTextField;
    private javax.swing.JLabel varNameLabel;
    private javax.swing.JTextField varNameTextField;
    private javax.swing.JCheckBox vietaIncludingNilCheckBox;
    private javax.swing.JButton vietaOneEquasionButton;
    private javax.swing.JButton vietaOneEquasionButton1;
    // End of variables declaration//GEN-END:variables
}
